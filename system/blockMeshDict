/*--------------------------------*- C++ -*----------------------------------*\
  =========                 |
  \\      /  F ield         | OpenFOAM: The Open Source CFD Toolbox
   \\    /   O peration     | Website:  https://openfoam.org
    \\  /    A nd           | Version:  8
     \\/     M anipulation  |
\*---------------------------------------------------------------------------*/
FoamFile
{
    version     2.0;
    format      ascii;
    class       dictionary;
    object      blockMeshDict;
}
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //

convertToMeters 0.01;
h1       0.75;
h2       0.75;
H         1.5;
x0        -10;
x1        -7.0;
x2        -3.5;
vertices
(
    ($x0 0 0) //    0
    ($x1 0 0) //    1
    ($x1 $h1 0) //   2
    ($x0 $h1 0) //    3
    ($x2 $h2 0) //    4
    ($x2 $H 0) //    5
    ($x1 $H 0) //    6
    ($x0 $H 0) //    7

    ($x0 0 1) //    8
    ($x1 0 1) //    9
    ($x1 $h1 1) //   10
    ($x0 $h1 1) //    11
    ($x2 $h2 1) //    12
    ($x2 $H 1) //    13
    ($x1 $H 1) //    14
    ($x0 $H 1) //    15
);

blocks
(
    hex (0 1 2 3 8 9 10 11) (20 10 1) simpleGrading (1 1 1)
    hex (2 4 5 6 10 12 13 14) (20 10 1) simpleGrading (1 1 1)
    hex (3 2 6 7 11 10 14 15) (20 10 1) simpleGrading (1 1 1)
);

edges
(
);

boundary
(
    movingWall
    {
        type wall;
        faces
        (
            (1 2 10 9)
            (10 12 4 2)
        );
    }
    farFieldMoving
    {
        type patch;
        faces
        (
            (14 13 5 6)
        );
    }
    rightWall
    {
        type wall;
        faces
        (
            (13 12 4 5)
        );
    }
    axis
    {
        type patch;
        faces
        (
            (0 1 9 8)  //???????????????????????
        );
    }
    leftWall
    {
        type patch;
        faces
        (
            (0 8 11 3)
            (3 11 15 7)
        );
    }
    farField
    {
        type patch;
        faces
        (
            (15 14 6 7)
        );
    }
    back
    {
        type empty;
        faces
        (
            (0 3 2 1)
            (3 7 6 2)
            (2 6 5 4)
        );
    }
    front
    {
        type empty;
        faces
        (
            (8 9 10 11)
            (11 10 14 15)
            (10 12 13 14)

        );
    }
);

mergePatchPairs
(
);

// ************************************************************************* //
